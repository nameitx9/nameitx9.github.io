<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>使用ssh代理连接到github持久化问题</title>
    <url>/2024/03/30/%E4%BD%BF%E7%94%A8ssh%E4%BB%A3%E7%90%86%E8%BF%9E%E6%8E%A5%E5%88%B0github%E6%8C%81%E4%B9%85%E5%8C%96%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="问题来源"><a href="#问题来源" class="headerlink" title="问题来源"></a>问题来源</h1><p>最近在尝试使用github.io的免费个人主页来挂载自己的blog，这就需要每一次博客写完后都要hexo deploy到GitHub对应的仓库中，显然使用ssh密钥连接GitHub是一个明智的选择，免去了每一次输密码的烦恼。于是，根据官方文档：</p>
<p><a href="https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/">https://docs.github.com/zh/authentication/connecting-to-github-with-ssh/</a></p>
<p>描述的操作方法操作进行配置后，问题就出现了。在第一次完成配置后一切正常，但是只要你重新启用一个终端后再次尝试使用ssh或者git连接github时，就会收到一个<code>Permission denied (publickey).</code>，而在你重新启动ssh-agent，并重新将你的密钥添加到它的缓存后，一切又会回归正常，但我使用ssh密钥不就是图不用每次都输入用户名和密码吗？这不就又回去了？</p>
<h2 id="工作环境"><a href="#工作环境" class="headerlink" title="工作环境"></a>工作环境</h2><blockquote>
<p>Ubuntu 22.04.3 LTS </p>
</blockquote>
<h1 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h1><p>这个问题的出现源自于ssh-agents，文末会提到相关原理。我们先来看如何解决这个问题，如果你直接到网络上查找问题的解决方法，你会看到两大类：直接或者间接来自CSDN的回复，或者是把官方教你如何ssh免密码连接GitHub的过程重复一遍。他们会告诉你这么两行代码：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval &quot;$(ssh-agent -s)&quot;  </span><br><span class="line">ssh-add ~/.ssh/id_raq</span><br></pre></td></tr></table></figure>
<p>第一行的作用是检查你的运行环境是否已经启用了ssh-agent，第二行则是将你的密钥添加到ssh代理（ssh-agent）的缓存中，其中<code>id_raq</code>是你的私钥文件。当你完成操作后，你会发现问题消失了，你又能重新正常的无密码连接GitHub了，但是，只要你关闭当前的终端重启一个新终端就会发现，<code>Permission denied (publickey).</code>又回来啦，你又要重新操作一遍。<br>你可以使用</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -vT git@github.com</span><br></pre></td></tr></table></figure>
<p>检查两次连接之间的差异情况。</p>
<p>这里给出一个永久的解决方案，首先你要使用编辑器打开你的个人目录下的ssh配置文件，Linux的在<code>~/.ssh/config</code>，window大概率在<code>C:\users\yourusername\.ssh\config</code>。在其中添加入：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Host *</span><br><span class="line">  AddKeysToAgent yes</span><br><span class="line">  IdentityFile ~/.ssh/id_rsa  # 替换为您的密钥路径</span><br></pre></td></tr></table></figure>
<p>这是告诉ssh，在匹配任何ssh连接前，将上面的<code>id_rsa</code>加入到代理的缓存中，在这之后，你便可以永久享受免密码登陆github了。</p>
<p>当然，如果你存在强迫症，不能接受这么做，但也想解决这个问题，也可以在你每一次连接GitHub时使用下面的方式进行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh -i ~/.ssh/id_rsa username@github.com</span><br></pre></td></tr></table></figure>

<p>指定ssh使用特定的密钥进行连接，只是这个办法在一些封装了ssh，git方法的接口中就没法使用了，请自行斟酌。</p>
<h1 id="ssh-agent"><a href="#ssh-agent" class="headerlink" title="ssh-agent"></a>ssh-agent</h1><p>问题的源头来自于ssh-agent，什么是ssh-agent？SSH代理（ssh-agent）是一个身份验证代理，用于在您的会话期间管理SSH密钥。它通过在您的用户会话中创建一个持久的进程来工作。当你使用<code>ssh-add</code>命令向代理添加密钥时，代理会将密钥加载到内存中，并在需要时将其提供给SSH客户端。这样，你就可以通过代理进行SSH连接，而无需每次都输入密钥密码。SSH代理提高了安全性，因为密钥不会暴露在磁盘上，并提供了更便捷的使用体验。问题就在也在于它是一个会话期间启用的进程，当你结束一次会话之后，他也会随之消失。</p>
]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>ssh</tag>
        <tag>Linux</tag>
      </tags>
  </entry>
</search>
